2020-11-23

    * Instalace pygame

    * Vysvětlení hlavích konceptů okolo pygame

    * Aplikace: Tabule na kreslení

    * Ukázka jiných well-known knihoven
        - numpy - matice a práce s nimi
        - opencv (cv2) - funcke na zpracování obrazu
        - matplotlib - kreslení grafů, případně obrázků

    * dcv - Poskakující koule


2020-11-16

    * Detailní informace o zápočtových programech
        - https://github.com/Jirka-Mayer/NPRG030-062/blob/master/prg/zapoctaky.md

    * Run-length encoding .pgm souborů
        - jen zakódování

    * Dcv - skoro-setřízené posloupnosti


2020-11-09

    * Návrh, dekompozice a programování hry Sokoban
        - ukázka vlastností `@property`

    * Zadání dcv - Bases


2020-11-02

    * Povídání o standardním vstupu a výstupu (std. i/o = stdio)
        - přesměrování vstupu a výstupu z konzole
            - i pro windows
        - využití konceptu "soubor" v unixu i pro jiné věci (např. hardware)
        - neplést s argumenty programu
        - roura (pipe), výstup jednoho programu jde na vstup druhého

    * Načtení a zobrazení obrázku ve formátu PGM
        - co je PGM
        - návrh API, implementace

    * Dcv - implementace hledání vadné koule


2020-10-26

    * Implementace zásobníku - třída `Stack`
        (překryv algoritmizace s programováním)
        - pro běžné účely postačí list(), ale někdy se hodí mít
            vlastní datovou strukturu
        - privátní metody

    * Testování správnosti uzávorkování pomocí zásobníku
        - pro obyčejné závorky "(()())()" stačí počítadlo,
            takže jsme zavedli více závorek <>{}[] a zásobník
        - pěkná dekompozice programu do funkcí + třídy `Stack`

    * Práce se soubory
        - problém s relativní cestou - závisí na "current working directory"
            - řešení pomocí funkcí v knihovně `os.path.*` a hodnoty `__file__`
        - otevření a zavření souboru
            - zavření lze vyřešit elegantně pomocí bloku "with"
        - čtení jedné řádky, více řádek, všech řádek postupně
        - zápis textu, zápis řádek
        - koncovka souboru `.txt` je čistě kosmetická věc, nemá vliv na nic
        - povídání o Linux, Mac "\n" koncích řádek, vs. Windows "\r\n"

    * Zadání dcv - práce se soubory (skalární součiny)

2020-10-19

    * demonstrace gitu

    * list comprehension
        https://www.pythoncheatsheet.org/#Comprehensions

    * Dlouhé povídání o dekompozici programu do funkcí na příkladu s šachy
        - programování shora / zdola
        - for i, x in enumerate(["A", "B", "C"]):
        - tuple
        - from my_file import my_func
        - split(), splitlines()
        - lazení pomocí breakpointu v akci

    * Zadán dcv - Game of life


2020-10-12

    * Výpis Fibonacciho posloupnosti
        - sekvenčně
        - s pamatování v poli
        - třeba i rekurzivně? Později.
    
    * String .strip()
        - hodí se znát pomocné funkce
            .split(), .join(), .strip()
        - hodí se vědět, jak je implementovat

    * Zrcadlo (vypiš zadaný vstup v opačném pořadí)
        - zadávání vstupu s vyskočením z cyklu pomocí "break"
        - opakovat cyklus pomocí "continue"
        - zásobník
            = datová struktura s operacemi PUSH a POP
        - fígl s `print(vstup[::-1])`

    * Frekvenční tabulka
        - zadávání posloupnosti čísel na jednom řádku (.split())

    * Bonus: Přihrádkové třídění
        - když už máme počty jednotlivých číslic, tak z nich můžeme
        zkonstruovat setřízené pole v lineární časové složitosti
        (což je rychlejší než klasické třídění)

    * Zadán dcv - počet slov ve větě


2020-10-05

    * Organizační věci + podmínky zápočtu

    * Jak se dostat do Recodexu

    * Visual Studio Code, instalace Python pluginu, spouštění python kódu
    
    * Lazení (Debugging) [F5], pro hledání chyb

    * Příklady (viz. složka 2020-10-05 se zdrojáky)
        - sečti dvě zadaná čísla, typy hodnot
        - zadej věk, je víc než 18?
            "if _:    else: "
        - automat - rozskok na 3 možnosti (Káva, Čaj, Exit)
            "if _:    elif _:    else: "
        - aritmetický průměr zadaných čísel
            "while not finished:"

    * Zadán dcv - hvězdičky, viz. recodex

2020-10-19

    * demonstrace gitu

    * list comprehension
        https://www.pythoncheatsheet.org/#Comprehensions

    * Dlouhé povídání o dekompozici programu do funkcí na příkladu s šachy
        - programování shora / zdola
        - for i, x in enumerate(["A", "B", "C"]):
        - tuple
        - from my_file import my_func
        - split(), splitlines()
        - lazení pomocí breakpointu v akci

    * Zadán dcv - Game of life


2020-10-12

    * Výpis Fibonacciho posloupnosti
        - sekvenčně
        - s pamatování v poli
        - třeba i rekurzivně? Později.
    
    * String .strip()
        - hodí se znát pomocné funkce
            .split(), .join(), .strip()
        - hodí se vědět, jak je implementovat

    * Zrcadlo (vypiš zadaný vstup v opačném pořadí)
        - zadávání vstupu s vyskočením z cyklu pomocí "break"
        - opakovat cyklus pomocí "continue"
        - zásobník
            = datová struktura s operacemi PUSH a POP
        - fígl s `print(vstup[::-1])`

    * Frekvenční tabulka
        - zadávání posloupnosti čísel na jednom řádku (.split())

    * Bonus: Přihrádkové třídění
        - když už máme počty jednotlivých číslic, tak z nich můžeme
        zkonstruovat setřízené pole v lineární časové složitosti
        (což je rychlejší než klasické třídění)

    * Zadán dcv - počet slov ve větě


2020-10-05

    * Organizační věci + podmínky zápočtu

    * Jak se dostat do Recodexu

    * Visual Studio Code, instalace Python pluginu, spouštění python kódu
    
    * Lazení (Debugging) [F5], pro hledání chyb

    * Příklady (viz. složka 2020-10-05 se zdrojáky)
        - sečti dvě zadaná čísla, typy hodnot
        - zadej věk, je víc než 18?
            "if _:    else: "
        - automat - rozskok na 3 možnosti (Káva, Čaj, Exit)
            "if _:    elif _:    else: "
        - aritmetický průměr zadaných čísel
            "while not finished:"

    * Zadán dcv - hvězdičky, viz. recodex
